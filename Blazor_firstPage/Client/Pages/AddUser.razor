@page "/CreateUser"
@using Blazor_firstPage.Shared
@inject HttpClient Http
<h3>Add User</h3>

<div>
    <label for="id">Id:</label>
    <input type="text" id="id" @bind="userId" />
</div>
<div>
    <label for="name">Name:</label>
    <input type="text" id="name" @bind="userName" />
</div>
<div>
    <label for="email">Email:</label>
    <input type="text" id="email" @bind="userEmail" />
</div>
<div>
    <button @onclick="AddUser1">Add User</button>
</div>

<<<<<<< Updated upstream
@if (message != null)
{
    <p>@message</p>
=======
<form method="post">
   
        <div>
            <label for="id">ID:</label>
            <input asp-for="Id" class="form-control" id="id" />
        </div>
        <div>
            <label for="name">Name:</label>
            <input asp-for="Name" class="form-control" id="name" />
        </div>
        <div>
            <label for="email">Email:</label>
            <input asp-for="Email" class="form-control" id="email" />
        </div>

        <button type="button" class="btn btn-primary" onclick="addUser()">Create User</button>

</form>

<h1>user.Name</h1>




@code {
    //public User user { get; set; }
    User user = new User();
   
    user.Id= getElementById("id").value;
    user.Name = getElementById("name").value;
    user.Email = getElementById("email").value;

    protected override async Task OnInitializedAsync()
    {
        user = await Http.PostAsJsonAsync<User>("UserService",user);

        //user = await Http.PostAsJsonAsync("Blazor_firstPage/userService", user);

    }
    
>>>>>>> Stashed changes
}

@code {
    private string userId;
    private string userName;
    private string userEmail;
    private string message;

<<<<<<< Updated upstream
    // Replace 'YourApiEndpoint' with the actual API endpoint
    private string apiEndpoint = "YourApiEndpoint";

    private async Task AddUser1()
    {
        User newUser = new User
            {
                Id = userId,
                Name = userName,
                Email = userEmail
            };

        var response = await Http.PostAsJsonAsync("userService", newUser);

        if (response.IsSuccessStatusCode)
        {
            message = "User added successfully!";
            // You can perform additional actions here, such as clearing the input fields or updating a user list.
        }
        else
        {
            message = "Failed to add user. Please try again.";
        }
    }

    private class User
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
    }
}
=======





>>>>>>> Stashed changes
